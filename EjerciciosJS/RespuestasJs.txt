E1.- [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
----En la primera parte del codigo al usar el metodo slice nos colocamos en la poscion 0 y despues avanzamos 3 elementos, despues de eso se le esta concatenando el arreglo con el metodo concat, y por ultimo solo se muestran nuevamente con el slide desde la posicion 3 y avanzamos 6 lugares. En la segunda parte del codigo se vuelve a declarar el mismo arreglo, pero ahora se le asignan otros valores, despues con el metodo splice nos colocamos en la posicion 3 y borramos 0 elementos, despues de esto este metodo nos permite agregar elementos, colocados en la posicion 3 se comienza a agregar el arreglo que esta dentro del metodo, los 3 puntos que le anteceden es para agregar el contenido del arreglo y no el arreglo como tal, por ultimo retornamos en nuestra funcion el arreglo que se menciona anteriormente.


E2.- ["a", "b", "c"]
----En este ejercicio se crea un arreglo que lleva por nombre array y se le asginan 3 elementos, despues estamos usando el metodo join para separar cada elemento con el simbolo que colocamos dentro, para poder ver este resultado debemos asignarle una variable y retornala en nuestra funcion, esto nos mostrara un string con los elementos de nuestro arreglo pero separados por el contenido dentro de los parametros del join, de igual manera en el segundo metodo join se toma el mismo arreglo pero ahora se le agrega una separacion por un punto, esto si lo guardamos en una variable y retornamos la misma nos mostrara un string de nuestro arreglo separado por punto, siguiendo nuestro bloque de codigo, llegamos al metodo split, este lo que hace es separar una cadena de texto y convertirla en un arreglo y delimitando sus elementos por los que introducimos dentro de sus parametros, en el primer caso se crea una arreglo y cada elemento va a estar delimitado por un punto, en el segundo caso es de la misma manera, para poder observar estos resultados los almacenamos en una variable y la retornamos para poder ver nuestro arreglo final.


E3.-
----En este ejercicio se genera primero un arreglo y se le agregan elementos, despues el las siguientes lineas se ejecutan distintos metodos y para poder verlos podemos almacenarlos en una variable que de igual manera retornaremos en nuestra funcion, "Array.isArray(a)" nos devuelve un TRUE, ya que se esta preguntando que si nuestra variable "a" es un arreglo, como esto es cierto, nuestra funcion nos devuelve un TRUE. "a.includes(10)" esto de igual manera nos devuelve un TRUE, ya que estamos preguntando si el elemento "10" se encuentra dentro de nuestro arreglo "a", como esto es cierto retorna TRUE. "a.includes(10,2)" retorna un FALSE ya que estamos preguntando que si el elemento 10 se encuentra en nuestro arreglo a partir de la posicion numero 2, como el elemento 10 realmente se encuentra en la posicion numero 1 esto nos retorna un FALSE, a.indexOf(25) esto nos retorna un 4, lo que hace esta linea es preguntar el indice del elemento que colocamos dentro de los parametros, el 25 se encuentra el la posicion 4 dentro de nuestro arreglo, por esta razon esta retornando este numero y por ultimo a.lastIndexOf(10,0) nos retorna un -1, esto porque el metodo esta buscando el elemento 10 a partir de la posicion 0, pero este metodo hace su recorrido hacia atras, como no tenemos elementos antes de la posicion 0 nos muestra este resultado.